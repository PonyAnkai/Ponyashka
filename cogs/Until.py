import disnake
from disnake.ext import commands

import asyncio
import time

from .module import System as sys
from .module import REQ_database as Rdb
from .module import Views as View

db = Rdb.DataBase

#! –°–µ–ª–µ–∫—Ç–æ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã !help
# –¢–µ–ª–æ –∫–æ–º–∞–Ω–¥—ã, –≤—ã–∑–æ–≤ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞ –Ω–∞ 212 —Å—Ç—Ä–æ–∫–µ
class DropDownMenuHelp(disnake.ui.StringSelect):
    def __init__(self, time,  map:map= None, user:int= None):
        self.index= 0
        self.map= map
        self.user= user
        self.time= time

        options = [
            disnake.SelectOption(label='–ì–ª–∞–≤–Ω–∞—è', value='1'),
            disnake.SelectOption(label='–≠–∫–æ–Ω–æ–º–∏–∫–∞', value='2'),
            disnake.SelectOption(label='RPG-–ö–æ–º–∞–Ω–¥—ã', value='3'),
            disnake.SelectOption(label='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ', value='4'),
            disnake.SelectOption(label='–£—Ç–∏–ª–∏—Ç—ã', value='5')
        ]
        super().__init__(
            placeholder='–í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–π',
            min_values=1,
            max_values=1,
            options=options,
            )

        if map is None:
            raise 'Not have map: [components] [embed]'
            return
    
    async def callback(self, inter: disnake.MessageInteraction):
        if self.user != inter.author.id:
            await inter.response.send_message('–î–∞–Ω–Ω–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ –≤–∞—à–µ.', ephemeral=True)
            return
        if self.values[0] == '1':
            embed = self.map[0]
        if self.values[0] == '2':
            embed = self.map[1]
        if self.values[0] == '3':
            embed = self.map[2]
        if self.values[0] == '4':
            embed = self.map[3]
        if self.values[0] == '5':
            embed = self.map[4]
        if self.time < time.time():
            embed = disnake.Embed(description='**–í—ã—à–ª–æ –≤—Ä–µ–º—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è**', colour=disnake.Color.red())
            await inter.response.edit_message(embed=embed, view=None)
            return
        else:
            await inter.response.edit_message(embed=embed)

class DropDownViewHelp(disnake.ui.View):
    def __init__(self, map: map, user:int, time:float):
        super().__init__(timeout=None)
        self.add_item(DropDownMenuHelp(time, map, user, ))


class Until(commands.Cog):
    def __init__(self, bot=commands.Bot):
        self.bot = bot
    
    @commands.command(name='leaders', aliases=['lead', '–ª–∏–¥–µ—Ä—ã', '—Ç–æ–ø'])
    async def leaders(self, ctx):

        try: userEnter = ctx.message.content.replace(f'{ctx.message.content.split(' ')[0]} ', '')
        except: userEnter = None
        if userEnter in ['?', 'help']:
            await Until(self.bot).helpedUser(context=ctx, ctx=ctx, info='leaders')
            return
        else: del userEnter

        if ctx.guild is None:
            await ctx.send(embed=disnake.Embed(description='**–î–æ—Å—Ç—É–ø–Ω–æ, —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.**'))
            return

        user = ctx.message.author.id
        usersE = db.Info().takeFromRPG(table='user_main_info')
        usersM = db.Info().takeFromRPG(table='user_money')
        
        # !–°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–ø 10 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ –æ–ø—ã—Ç—É-—É—Ä–æ–≤–Ω—é
        # –ó–∞–Ω–µ—Å–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞—Ä–∏–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        topListE = {}
        for index, item in enumerate(usersE):
            topListE[item[0]] = [item[2], item[1]]
        # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∑–∞–Ω–µ—Å–µ–Ω–Ω—ã—Ö –≤ —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        sortTopListE = sorted(topListE.items(), key= lambda items: items[1], reverse=True)
        # –ü–æ–∏—Å–∫ –º–µ—Å—Ç–∞ –≤ —Ç–æ–ø–µ –∞–≤—Ç–æ—Ä–∞ –≤—ã–∑–æ–≤–∞ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞
        callAuthorE = None
        for index, item in enumerate(sortTopListE):
            if user == int(item[0]):
                callAuthorE = index+1
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
        EmbedText = ''
        for index, item in enumerate(sortTopListE):
            user_ctx = ctx.guild.get_member(item[0])
            try:
                if user_ctx.nick: name = user_ctx.nick
                else: name = user_ctx.name
            except:
                name = db.Info(user_id=item[0]).takeFromRPG(table='user_ds_info')
                if not name: continue
                else: name = name[1]
            EmbedText += f'**``{index + 1}``** **{name}**\n|„Ö§–£—Ä–æ–≤–µ–Ω—å: {item[1][1]} ``({item[1][0]} exp)``\n'
            if index == 9:
                break
        # –ü–ª–∞—à–∫–∞ —Å –∏—Ç–æ–≥–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π 
        embed_exp = disnake.Embed(
            title='**–¢–æ–ø –ª–∏–¥–µ—Ä–æ–≤ –ø–æ –æ–ø—ã—Ç—É** üèÜ', 
            description=EmbedText
            )
        if not ctx.guild is None:
            embed_exp.set_thumbnail(url=ctx.guild.icon)
            embed_exp.set_footer(
                text=f'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ {callAuthorE} –º–µ—Å—Ç–µ –ø–æ –æ–ø—ã—Ç—É', 
                icon_url=ctx.message.author.avatar)
        

        # !–°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–ø 10 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ –≤–∞–ª—é—Ç–µ
        topListM = {}
        for index, item in enumerate(usersM):
            summ = item[1] + item[2]*400 + item[3]*3200 + item[4]*6400
            topListM[item[0]] = [summ, item[1], item[2], item[3], item[4]]
        # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∑–∞–Ω–µ—Å–µ–Ω–Ω—ã—Ö –≤ —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        sortTopListM = sorted(topListM.items(), key= lambda items: items[1], reverse=True)
        # –ü–æ–∏—Å–∫ –º–µ—Å—Ç–∞ –≤ —Ç–æ–ø–µ –∞–≤—Ç–æ—Ä–∞ –≤—ã–∑–æ–≤–∞ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞
        callAuthorM = None
        for index, item in enumerate(sortTopListM):
            if user == int(item[0]):
                callAuthorM = index+1
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
        EmbedText = ''
        for index, item in enumerate(sortTopListM):
            user_ctx = ctx.guild.get_member(item[0])
            try:
                if user_ctx.nick: name = user_ctx.nick
                else: name = user_ctx.name
            except:
                try:
                    name = db.Info(user_id=int(item[0])).takeFromRPG(table='user_ds_info')[1]
                except: name = '`[unknow]`'
            EmbedText += f'**``{index + 1}``** **{name}**\n|„Ö§–¶–µ–Ω–Ω–æ—Å—Ç—å –∫–æ—à–µ–ª—å–∫–∞ ``({item[1][0]:,})``\n'
            if index == 9:
                break
        # –ü–ª–∞—à–∫–∞ —Å –∏—Ç–æ–≥–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π 
        embed_money = disnake.Embed(
            title='**–¢–æ–ø –ª–∏–¥–µ—Ä–æ–≤ –ø–æ –≤–∞–ª—é—Ç–µ** üí≤', 
            description=EmbedText
            )
        if not ctx.guild is None:
            embed_money.set_thumbnail(url=ctx.guild.icon)
            embed_money.set_footer(
                text=f'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ {callAuthorM} –º–µ—Å—Ç–µ –ø–æ –≤–∞–ª—é—Ç–µ', 
                icon_url=ctx.message.author.avatar)
        

        # !–°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–ø 10 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ –≤–∏–Ω—Å—Ç—Ä–∏–∫–∞–º
        # –ó–∞–Ω–µ—Å–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞—Ä–∏–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        # topListW = {}
        # for index, item in enumerate(usersW):
        #     summ = item[1] + item[2] + item[3]
        #     topListW[item[0]] = [item[1], item[2], item[3], summ]
        # # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∑–∞–Ω–µ—Å–µ–Ω–Ω—ã—Ö –≤ —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        # sortTopListW = sorted(topListW.items(), key= lambda items: items[1][3], reverse=True)
        # # –ü–æ–∏—Å–∫ –º–µ—Å—Ç–∞ –≤ —Ç–æ–ø–µ –∞–≤—Ç–æ—Ä–∞ –≤—ã–∑–æ–≤–∞ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞
        # callAuthorW = None
        # for index, item in enumerate(sortTopListW):
        #     if user == int(item[0]):
        #         callAuthorW = index+1
        # # –°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
        # EmbedText = ''
        # for index, item in enumerate(sortTopListW):
        #     EmbedText += f'**``{index + 1}``** <@{item[0]}>\n|„Ö§**–°—Ç—Ä–∏–∫–æ–≤:** **``{item[1][3]}``**\n|„Ö§[{item[1][0]}—Ån] [{item[1][1]}cs] [{item[1][2]}rr]\n'
        #     if index == 9:
        #         break
        # # –ü–ª–∞—à–∫–∞ —Å –∏—Ç–æ–≥–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π 
        # embed_win = disnake.Embed(
        #     title='**–¢–æ–ø –ª–∏–¥–µ—Ä–æ–≤ –ø–æ –≤–∏–Ω—Å—Ç—Ä–∏–∫–∞–º** üíÄ', 
        #     description=EmbedText
        #     )
        # if not ctx.guild is None:
        #     embed_win.set_thumbnail(url=ctx.guild.icon)
        #     embed_win.set_footer(
        #         text=f'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ {callAuthorW} –º–µ—Å—Ç–µ –ø–æ –≤–∏–Ω—Å—Ç—Ä–∏–∫–∞–º', 
        #         icon_url=ctx.message.author.avatar)
        
        # !–°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–ø 1, 10 —Ç–æ–ø–æ–≤ –ø–æ —Ö–∞—Ä–∞–∫—Ç–∏—Ä–∏—Å—Ç–∏–∫–∞ –†–ü–ì
        # 1. –ó–¥–æ—Ä–æ–≤—å–µ(–•–ü) + –°—Ç–æ–π–∫–æ—Å—Ç—å(DR)
        # 2. –ê—Ç–∞–∫–∞(ATK) + –ó–∞—â–∏—Ç–∞(DEF)
        # 3. –í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å(ST)
        # 4. –ö—Ä–∏—Ç. —É—Ä–æ–Ω(CrM) + –ö—Ä–∏—Ç. —à–∞–Ω—Å(CrC)
        # 5. –°–∏–ª–∞ –¥—É—à–∏(SS)
        # 6. –£–¥–∞—á–∞(Luck)

        callAuthorRPG = None
        embed_rpg = disnake.Embed(
            title='**–¢–æ–ø –ø–æ —Ö–∞—Ä–∞–∫—Ç–∏—Ä–∏—Å—Ç–∏–∫–∞–º** ', 
            description='–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ~')
        if not ctx.guild is None:
            embed_rpg.set_thumbnail(url=ctx.guild.icon)
            embed_rpg.set_footer(
                text=f'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ {callAuthorRPG} –º–µ—Å—Ç–µ –ø–æ —Ö–∞—Ä–∞–∫—Ç–∏—Ä–∏—Å—Ç–∏–∫–∞–º', 
                icon_url=ctx.message.author.avatar)
        # embed_win
        # –°–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü
        maps = [embed_exp, embed_money, embed_rpg]
        view = View.DropDownViewLeader(map=maps, user=user, time=time.time()+180)
        await ctx.send(embed=embed_exp, view=view)
    
    # TODO: on when got ready a litle RPG content 
    @commands.command(name='help', aliases=['Help', '–ø–æ–º–æ—â—å', '–ü–æ–º–æ—â—å', '—Ö–µ–ª–ø', '–•–µ–ª–ø']) #aliases=['—Ö–µ–ª–ø', '–ø–æ–º–æ—â—å', '–∫–æ–º–∞–Ω–¥—ã']
    async def helpedUser(self, ctx, info=None):

        def embedBase():
            embed = disnake.Embed(
            title='–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
            description='''
–î–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞–∂–¥–æ–π –∫–æ–º–∞–Ω–¥–µ –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `!help <–Ω–∞–∑–≤–∞–Ω–∏–µ>` **->** `(!help work)` –ª–∏–±–æ–∂–µ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã —É–∫–∞–∑–∞—Ç—å `?` **->** `(!work ?)`. –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ —Å–∏–ª—å–Ω–æ –Ω–µ –ø–æ–Ω—è—Ç–Ω–æ, —Å–ø—Ä–∞—à–∏–≤–∞–π—Ç–µ —É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ - –ü–æ–Ω—è.

<:SoundGood:1306072180693401690> **–û–±—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:**
`leaders` `avatar` `rand` `gif` `russianrollete` `coin`

<:ohYa:1306072065543114752> **–ö–æ–º–∞–Ω–¥—ã –ø–æ–Ω–∏–º–æ–Ω–æ–≤**:
`wallet` `work` `lotery` `craft` `uncraft` `sellpoke` `setpokework` `lookdivpoke` `look` `lookbag` `fightpoke` `setfightgroup` `tradepoke` `support` `upgradepoke` `remelting` `marketpoke` `memorysoul`
            ''',
            colour=disnake.Color.yellow()
            )
            embed.set_footer(text='–ü–æ–Ω—è—à—å ¬©2024 –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞–ø–æ–Ω—è—à–µ–Ω—ã.', icon_url='https://media.discordapp.net/attachments/1306066774860763146/1306067476601245716/7_-_17.08.2024.png?ex=6735519f&is=6734001f&hm=fbaacb4ca01e0a09222dbdea3d5790d464c100b5ab14724e73a8f48cb9ac4ac5&=&format=webp&quality=lossless&width=290&height=350')
            return ctx.send(embed=embed)

        try: userEnter = ctx.message.content.replace(f'{ctx.message.content.split(' ')[0]} ', '')
        except: userEnter = None
        if userEnter == ctx.message.content.split(' ')[0]:
            await embedBase()
            return
        
        if info:
            aboutSystem = sys.loadJson(path='../PonyashkaDiscord/config/help.json')
            try: helped = aboutSystem[info.lower()]
            except: return await ctx.send(embed=disnake.Embed(description='**–û–± —ç—Ç–æ–º —É –º–µ–Ω—è –Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.**'))
            embed = disnake.Embed(
                title=f'{helped['status']}',
                description=helped['text']
            )
            await ctx.send(embed=embed) 
            return

        aboutSystem = sys.loadJson(path='../PonyashkaDiscord/config/help.json')

        try:
            helped = aboutSystem[userEnter.lower()]
        except:
            embed = disnake.Embed(description='**–û —Ç–∞–∫–æ–º —è –Ω–µ –∑–Ω–∞—é.**', colour=disnake.Color.dark_red())
            await ctx.send(embed=embed)
            return

        embed = disnake.Embed(
            title=f'{helped['status']}',
            description=helped['text']
            )
        await ctx.send(embed=embed) 

    @commands.command(name='avatar',  aliases=['a', '–∞', '–∞–≤–∞', '–∞–≤–∞—Ç–∞—Ä'])
    async def avatar(self, ctx):
        
        try: userEnter = ctx.message.content.replace(f'{ctx.message.content.split(' ')[0]} ', '')
        except: userEnter = None
        if userEnter in ['?', 'help']:
            await Until(self.bot).helpedUser(context=ctx, ctx=ctx, info='avatar')
            return
        else: del userEnter

        if ctx.message.raw_mentions:
            mentioned = ctx.guild.get_member(ctx.message.raw_mentions[0])
            embed = disnake.Embed(title=f'–ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {mentioned.name}')
            embed.set_image(mentioned.avatar)
            await ctx.send(embed=embed)
            return
        embed = disnake.Embed(title=f'–ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {ctx.message.author.name}')
        embed.set_image(ctx.message.author.avatar)
        await ctx.send(embed=embed)
    
        import requests

        raw = ctx.guild.get_member(ctx.message.raw_mentions[0])
        avatar = raw.avatar
        responce = requests.get(url=avatar)
        with open(f'../PonyashkaDiscord/content/avatar/{raw.id}.png', 'wb') as file:
            file.write(responce.content)
            file.close()

        await ctx.send(f'/ all ok')


    @commands.command(name='clearconsole', aliases=['cls'])
    async def clearConsole(self, ctx):
        import os
        os.system('cls')
        os.system('ECHO DUBUG: System console has been cleared')
        os.system('ECHO ' + '_'*40)

    @commands.command(name='carddrop', aliases=['card'])
    async def card(self, ctx):
        from random import choice, randint
        
        mast = ['–ø–∏–∫–∏ ‚ô†', '–±—É–±–∏ ‚ô¶', '—á–µ—Ä–≤—ã ‚ô•', '—Ç—Ä–µ—Ñ—ã ‚ô£']
        value = [2, 3, 4, 5, 6, 7, 8, 9, '–í–∞–ª–µ—Ç', '–î–∞–º–∞', '–ö–æ—Ä–æ–ª—å', '–¢—É–∑']

        text = f'{choice(value)} {choice(mast)}'
        if randint(1, 100) > 90:
            text = f'–û –Ω–µ—Ç! {choice('–ö—Ä–∞—Å–Ω—ã–π', '–ß–µ—Ä–Ω—ã–π')} –¥–∂–æ–∫–µ—Ä!'
        
        embed = disnake.Embed(title=text)
        await ctx.send(embed=embed)


# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–≥–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ —è–¥—Ä–æ –ø–æ –∫–æ–º–∞–Ω–¥–µ
def setup(bot:commands.Bot): 
    bot.add_cog(Until(bot))