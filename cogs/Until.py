from .module import REQ_database as Rdb

import disnake
from disnake.ext import commands
import asyncio
import discord
import time
from datetime import date

db = Rdb.DataBase
#! –û—Å–Ω–æ–≤–Ω–æ–µ —Ç–µ–ª–æ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞
# —Ç–µ–ª–æ —Å–∞–º–æ–π –∫–æ–º–∞–Ω–¥—ã, —á—Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–π —Å–µ–ª–µ–∫—Ç–æ—Ä –Ω–∞ 63 —Å—Ç—Ä–æ–∫–µ
class DropDownMenuLeader(disnake.ui.StringSelect):
    def __init__(self, map:map, user:int, time:float):
        self.index = 0
        self.map = map
        self.user= user
        self.time= time

        options = [
            disnake.SelectOption(label='–û–ø—ã—Ç', value='exp', description='–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Å–≤–æ–±–æ–¥–Ω–æ–º—É –æ–ø—ã—Ç—É'),
            disnake.SelectOption(label='–í–∞–ª—é—Ç–∞', value='money', description='–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –≤–∞–ª—é—Ç–µ [1sl = 3200es, 1sh = 400es]'),
            disnake.SelectOption(label='–ê—Ä–∫–∞–¥—ã', value='arcade', description='–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Å–∞–º–æ–º—É –±–æ–ª—å—à–æ–º—É –≤–∏–Ω—Å—Ç—Ä–∏–∫—É'),
            disnake.SelectOption(label='–•–∞—Ä–∞–∫—Ç–∏—Ä–∏—Å—Ç–∏–∫–∞–º', value='stat', description='–¢–æ–ø 1, –ø–æ –∫–∞–∂–¥–æ–π —Ö–∞—Ä–∞–∫—Ç–∏—Ä–∏—Å—Ç–∏–∫–µ')
            ]
        super().__init__(
            placeholder='–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ...',
            min_values=1,
            max_values=1,
            options=options,
            )
        
        if map is None:
            raise 'Not have map: [components] [embed]'
        
        
    async def callback(self, inter: disnake.MessageInteraction):
        if self.user != inter.author.id:
            await inter.response.send_message('–ù–µ –≤—ã –≤—ã–∑–≤–∞–ª–∏ —Ç–∞–±–ª–∏—Ü—É', ephemeral=True)
        if self.values[0] == 'exp':
            embed= self.map[0]
        elif self.values[0] == 'money':
            embed= self.map[1]
        elif self.values[0] == 'arcade':
            embed= self.map[2]
        elif self.values[0] == 'stat':
            embed= self.map[3]


        if self.time < time.time():
            embed = disnake.Embed(description='**–í—ã—à–ª–æ –≤—Ä–µ–º—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è**', colour=disnake.Color.red())
            await inter.response.edit_message(embed=embed, view=None)
            return
        else:
            await inter.response.edit_message(embed=embed)

# –ü—Ä–æ—Å–ª—É—à–∏–≤–∞—Ç–µ–ª—å –≤—ã–±–æ—Ä–∞
class DropDownViewLeader(disnake.ui.View):
    def __init__(self, map: map, user:int, time:float):
        super().__init__(timeout=None)
        self.add_item(DropDownMenuLeader(map, user, time))

#! –°–µ–ª–µ–∫—Ç–æ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã !help
# –¢–µ–ª–æ –∫–æ–º–∞–Ω–¥—ã, –≤—ã–∑–æ–≤ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞ –Ω–∞ 212 —Å—Ç—Ä–æ–∫–µ
class DropDownMenuHelp(disnake.ui.StringSelect):
    def __init__(self, time,  map:map= None, user:int= None):
        self.index= 0
        self.map= map
        self.user= user
        self.time= time

        options = [
            disnake.SelectOption(label='–ì–ª–∞–≤–Ω–∞—è', value='1'),
            disnake.SelectOption(label='–≠–∫–æ–Ω–æ–º–∏–∫–∞', value='2'),
            disnake.SelectOption(label='RPG-–ö–æ–º–∞–Ω–¥—ã', value='3'),
            disnake.SelectOption(label='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ', value='4'),
            disnake.SelectOption(label='–£—Ç–∏–ª–∏—Ç—ã', value='5')
        ]
        super().__init__(
            placeholder='–í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–π',
            min_values=1,
            max_values=1,
            options=options,
            )

        if map is None:
            raise 'Not have map: [components] [embed]'
    
    async def callback(self, inter: disnake.MessageInteraction):
        if self.user != inter.author.id:
            await inter.response.send_message('–î–∞–Ω–Ω–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ –≤–∞—à–µ.', ephemeral=True)
        if self.values[0] == '1':
            embed = self.map[0]
        if self.values[0] == '2':
            embed = self.map[1]
        if self.values[0] == '3':
            embed = self.map[2]
        if self.values[0] == '4':
            embed = self.map[3]
        if self.values[0] == '5':
            embed = self.map[4]
        if self.time < time.time():
            embed = disnake.Embed(description='**–í—ã—à–ª–æ –≤—Ä–µ–º—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è**', colour=disnake.Color.red())
            await inter.response.edit_message(embed=embed, view=None)
            return
        else:
            await inter.response.edit_message(embed=embed)


class DropDownViewHelp(disnake.ui.View):
    def __init__(self, map: map, user:int, time:float):
        super().__init__(timeout=None)
        self.add_item(DropDownMenuHelp(time, map, user, ))

class Until(commands.Cog):
    def __init__(self, bot=commands.Bot):
        self.bot = bot
    
    @commands.command(name='leaders', aliases=['lead', '–ª–∏–¥–µ—Ä—ã', '—Ç–æ–ø'])
    async def leaders(self, ctx):

        user = ctx.message.author.id
        usersE = db.Info().all('user')
        usersM = db.Info().all('money')
        usersW = db.Info().all('user_wins_max')
        
        # !–°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–ø 10 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ –æ–ø—ã—Ç—É-—É—Ä–æ–≤–Ω—é
        # –ó–∞–Ω–µ—Å–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞—Ä–∏–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        topListE = {}
        for index, item in enumerate(usersE):
            topListE[item[0]] = [item[3], item[2]]
        # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∑–∞–Ω–µ—Å–µ–Ω–Ω—ã—Ö –≤ —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        sortTopListE = sorted(topListE.items(), key= lambda items: items[1], reverse=True)
        # –ü–æ–∏—Å–∫ –º–µ—Å—Ç–∞ –≤ —Ç–æ–ø–µ –∞–≤—Ç–æ—Ä–∞ –≤—ã–∑–æ–≤–∞ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞
        callAuthorE = None
        for index, item in enumerate(sortTopListE):
            if user == int(item[0]):
                callAuthorE = index+1
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
        EmbedText = ''
        for index, item in enumerate(sortTopListE):
            EmbedText += f'**``{index + 1}``** <@{item[0]}>\n|„Ö§**–£—Ä–æ–≤–µ–Ω—å: {item[1][1]}**\n|„Ö§**–æ–ø—ã—Ç: {item[1][0]}**\n'
            if index == 9:
                break
        # –ü–ª–∞—à–∫–∞ —Å –∏—Ç–æ–≥–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π 
        embed_exp = disnake.Embed(
            title='**–¢–æ–ø –ª–∏–¥–µ—Ä–æ–≤ –ø–æ –æ–ø—ã—Ç—É** üèÜ', 
            description=EmbedText
            )
        if not ctx.guild is None:
            embed_exp.set_thumbnail(url=ctx.guild.icon)
            embed_exp.set_footer(
                text=f'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ {callAuthorE} –º–µ—Å—Ç–µ –ø–æ –æ–ø—ã—Ç—É', 
                icon_url=ctx.message.author.avatar)
        

        # !–°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–ø 10 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ –≤–∞–ª—é—Ç–µ
        topListM = {}
        for index, item in enumerate(usersM):
            summ = item[2] + item[3]*400 + item[4]*3200 + item[5]*6400
            topListM[item[0]] = [summ, item[1], item[2], item[3], item[4]]
        # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∑–∞–Ω–µ—Å–µ–Ω–Ω—ã—Ö –≤ —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        sortTopListM = sorted(topListM.items(), key= lambda items: items[1], reverse=True)
        # –ü–æ–∏—Å–∫ –º–µ—Å—Ç–∞ –≤ —Ç–æ–ø–µ –∞–≤—Ç–æ—Ä–∞ –≤—ã–∑–æ–≤–∞ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞
        callAuthorM = None
        for index, item in enumerate(sortTopListM):
            if user == int(item[0]):
                callAuthorM = index+1
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
        EmbedText = ''
        for index, item in enumerate(sortTopListM):
            EmbedText += f'**``{index + 1}``** <@{item[0]}>\n|„Ö§**–í—Å–µ–≥–æ –≤–∞–ª—é—Ç—ã:** **``{item[1][0]}``**\n|„Ö§[{item[1][1]}es] [{item[1][2]}sh] [{item[1][3]}sl] [{item[1][4]}cr]\n'
            if index == 9:
                break
        # –ü–ª–∞—à–∫–∞ —Å –∏—Ç–æ–≥–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π 
        embed_money = disnake.Embed(
            title='**–¢–æ–ø –ª–∏–¥–µ—Ä–æ–≤ –ø–æ –≤–∞–ª—é—Ç–µ** üí≤', 
            description=EmbedText
            )
        if not ctx.guild is None:
            embed_money.set_thumbnail(url=ctx.guild.icon)
            embed_money.set_footer(
                text=f'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ {callAuthorM} –º–µ—Å—Ç–µ –ø–æ –≤–∞–ª—é—Ç–µ', 
                icon_url=ctx.message.author.avatar)
        

        # !–°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–ø 10 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ –≤–∏–Ω—Å—Ç—Ä–∏–∫–∞–º
        # –ó–∞–Ω–µ—Å–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞—Ä–∏–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        topListW = {}
        for index, item in enumerate(usersW):
            summ = item[1] + item[2] + item[3]
            topListW[item[0]] = [item[1], item[2], item[3], summ]
        # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∑–∞–Ω–µ—Å–µ–Ω–Ω—ã—Ö –≤ —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        sortTopListW = sorted(topListW.items(), key= lambda items: items[1], reverse=True)
        # –ü–æ–∏—Å–∫ –º–µ—Å—Ç–∞ –≤ —Ç–æ–ø–µ –∞–≤—Ç–æ—Ä–∞ –≤—ã–∑–æ–≤–∞ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞
        callAuthorW = None
        for index, item in enumerate(sortTopListW):
            if user == int(item[0]):
                callAuthorW = index+1
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
        EmbedText = ''
        for index, item in enumerate(sortTopListW):
            EmbedText += f'**``{index + 1}``** <@{item[0]}>\n|„Ö§**–°—Ç—Ä–∏–∫–æ–≤:** **``{item[1][3]}``**\n|„Ö§[{item[1][0]}—Ån] [{item[1][1]}cs] [{item[1][2]}rr]\n'
            if index == 9:
                break
        # –ü–ª–∞—à–∫–∞ —Å –∏—Ç–æ–≥–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π 
        embed_win = disnake.Embed(
            title='**–¢–æ–ø –ª–∏–¥–µ—Ä–æ–≤ –ø–æ –≤–∏–Ω—Å—Ç—Ä–∏–∫–∞–º** üíÄ', 
            description=EmbedText
            )
        if not ctx.guild is None:
            embed_win.set_thumbnail(url=ctx.guild.icon)
            embed_win.set_footer(
                text=f'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ {callAuthorW} –º–µ—Å—Ç–µ –ø–æ –≤–∏–Ω—Å—Ç—Ä–∏–∫–∞–º', 
                icon_url=ctx.message.author.avatar)
        
        # !–°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–ø 1, 10 —Ç–æ–ø–æ–≤ –ø–æ —Ö–∞—Ä–∞–∫—Ç–∏—Ä–∏—Å—Ç–∏–∫–∞ –†–ü–ì
        # 1. –ó–¥–æ—Ä–æ–≤—å–µ(–•–ü) + –°—Ç–æ–π–∫–æ—Å—Ç—å(DR)
        # 2. –ê—Ç–∞–∫–∞(ATK) + –ó–∞—â–∏—Ç–∞(DEF)
        # 3. –í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å(ST)
        # 4. –ö—Ä–∏—Ç. —É—Ä–æ–Ω(CrM) + –ö—Ä–∏—Ç. —à–∞–Ω—Å(CrC)
        # 5. –°–∏–ª–∞ –¥—É—à–∏(SS)
        # 6. –£–¥–∞—á–∞(Luck)

        callAuthorRPG = None
        embed_rpg = disnake.Embed(
            title='**–¢–æ–ø –ø–æ —Ö–∞—Ä–∞–∫—Ç–∏—Ä–∏—Å—Ç–∏–∫–∞–º** ', 
            description='–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ~')
        if not ctx.guild is None:
            embed_rpg.set_thumbnail(url=ctx.guild.icon)
            embed_rpg.set_footer(
                text=f'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ {callAuthorRPG} –º–µ—Å—Ç–µ –ø–æ —Ö–∞—Ä–∞–∫—Ç–∏—Ä–∏—Å—Ç–∏–∫–∞–º', 
                icon_url=ctx.message.author.avatar)
        
        # –°–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü
        maps = [embed_exp, embed_money, embed_win, embed_rpg]
        view = DropDownViewLeader(map=maps, user=user, time=time.time()+180)
        await ctx.send(embed=embed_exp, view=view)


    @commands.command(name='wait')
    async def wait(self, ctx):
        
        bot = self.bot
        channel = ctx.message.channel
        user = ctx.message.author.id
        await ctx.send('Enter Command! (hello, sex)')
        
        self.text = '?'
        def checker(m):
            if m.content == 'hello' and m.channel == channel and m.author.id == user:
                self.text = 'Boop'
                return True
            elif m.content == 'sex' and m.channel == channel and m.author.id == user:
                self.text = 'Nope.'
                return True
            else:
                return False
            
        msg = await bot.wait_for('message', check=checker, timeout=15.0)
        if msg:
            await channel.send(self.text)
    

    @commands.command(name='help', aliases=['—Ö–µ–ª–ø', '–ø–æ–º–æ—â—å', '–∫–æ–º–∞–Ω–¥—ã'])
    async def help(self, ctx):
        
        user = ctx.message.author.id

        #! –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        embed_main = disnake.Embed(
            title='–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
            description=
'''
```–î–∞–Ω–Ω—ã–π –±–æ—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω —á–µ–ª–æ–≤–µ–∫–æ–º, —Å –Ω–∏–∫–Ω–µ–π–º–æ–º: "–ü–æ–Ω—è—à—å"```
```–û–Ω –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –µ–¥–∏–Ω–æ–ª–∏—á–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–æ–º: "–ó–∞—Ä–∞—Ç–æ"```
```–ï—Å–ª–∏ –≤—ã –∑–∞–º–µ—Ç–∏–ª–∏ –±–∞–≥–∏, –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–∏ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–ª–æ—Ö–æ–π –±–∞–ª–∞–Ω—Å –≤ –æ–¥–Ω–æ–π –∏–∑ —Å–∏—Å—Ç–µ–º –ü–æ–Ω—è—à–∫–∏, 
—Ç–æ —Å–æ–æ–±—â–∏—Ç–µ —Å–∏—Å—Ç–µ–º–Ω–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É "–ü–æ–Ω—è—à—å" –æ–± —ç—Ç–æ–π –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–∏```

# –î–∞–Ω–Ω—ã–π –±–æ—Ç –∏–º–µ–µ—Ç:
1. **–≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫—É—é —Å–∏—Å—Ç–µ–º—É** 
–î–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–∫—É–ø–∞—Ç—å —Ä–∞–∑–Ω—ã–µ –¥–∏–∫–æ–≤–∏–Ω–Ω—ã–µ –≤–µ—â–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
–±—É–¥—å-—Ç–æ —Ä–æ–ª—å, –ø—Ä–∞–≤–æ –∏–ª–∏ –ø—Ä–æ—Ö–æ–¥–∫–∞. –í–æ–∑–º–æ–∂–Ω–æ –±—É–¥–µ—Ç –Ω–µ—á—Ç–æ —ç–∫—Å–ª—é–∑–∏–≤–Ω–æ–µ.
–í–∞–ª—é—Ç–∞, —á—Ç–æ —è–≤–ª—è–µ—Ç—Å—è –º–µ—Ä–∏–ª–æ–º —á–∞—Ç–∞ ‚Äî ChatPoint (CP)

2. **–°–∏—Å—Ç–µ–º—É RPG** 
–í–æ –º–Ω–æ–≥–æ–º —Å–∏—Å—Ç–µ–º–∞ –∑–∞–≤—è–∑–∞–Ω–∞ –Ω–∞ –ª–æ—Ä–µ –∏ –º–Ω–æ–≥–∏—Ö –∑–Ω–∞–∫–æ–≤—ã—Ö –º–æ–º–µ–Ω—Ç–∞—Ö —Å–µ—Ä–≤–µ—Ä–∞.
–î–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —è–≤–ª—è–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω–æ–π, –≥–¥–µ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ—Å—Ç–∏ –¥–ª—è —Å–∞–º–∏—Ö –∏–≥—Ä–æ–∫–æ–≤.
–í–æ –º–Ω–æ–≥–æ–º –æ–Ω–∞ —è–≤–ª—è–µ—Ç—Å—è –æ—Ç—Å—Ç—Ä–∞–Ω–µ–Ω–Ω–æ–π –æ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã —Å–µ—Ä–≤–µ—Ä–∞, –Ω–æ –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏ –≤–æ–∑–º–æ–∂–Ω–æ
–ü–æ–Ω—å –æ—à–∏–±–∞–µ—Ç—Å—è –∏ —ç—Ç–æ —Å—Ç–∞–Ω–µ—Ç —á–∞—Å—Ç—å—é —Å–∞–º–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞. –ú–µ—Ä–∏–ª–æ–º –≤—Å–µ–≥–æ.

3. **–†–∞–∑–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã**
–î–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ —Å–∏–ª—å–Ω–æ –∑–∞–≤—è–∑–∞–Ω—ã –Ω–∞ –∫–∞–∫–∏—Ö-–ª–∏–±–æ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—è—Ö
–∏ –ø—Ä–æ—Å—Ç–æ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –ª–∏–±–æ –ø–æ –ø—Ä–æ—Å—å–±–µ —á–ª–µ–Ω–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞, –ª–∏–±–æ –ø—Ä–æ—Å—Ç–æ –ø–æ –∂–µ–ª–∞–Ω–∏—é –ü–æ–Ω—è.

4. **–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ**
–§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–æ–≥–æ —Å–æ—Å—Ç–∞–≤–∞, –≤ —á–∞—Å—Ç–Ω–æ—Å—Ç–∏ –¥–≤—É—Ö –ª—é–¥–µ–π —Å–µ—Ä–≤–µ—Ä–∞: –ú–∞–≥–∞ –∏ –ü–æ–Ω—è.
(–ü–æ–Ω—å –≤—Å–µ –∏—â—ë—Ç —Å–µ–±–µ –ø–æ–º–æ—â–Ω–∏–∫–∞, –Ω–æ —É–≤—ã –ø–æ–∫–∞ –¥–æ—Å—Ç–æ–π–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –Ω–µ—Ç)

||–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –±—É–¥–µ—Ç –ø–æ–ø–æ–ª–Ω—è—Ç—å—Å—è||
'''
            )
        #! –ë–∞–∑–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã
        embed_eco = disnake.Embed(
            title='–≠–∫–æ–Ω–æ–º–∏–∫–∞',
            description=
'''
# –û–±—â–∏–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥, –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∫–∏

**``1. [leaders] | (lead, –ª–∏–¥–µ—Ä—ã, —Ç–æ–ø)``**
``` –ë–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ ```
–°–ø–∏—Å–æ–∫ 10-—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —á—Ç–æ –ª–∏–¥–∏—Ä—É—é—Ç –ø–æ –æ–ø—ã—Ç—É (ChatPoint), —á—Ç–æ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±—â–µ–Ω–∏—è.
–¢–∞–∫–∂–µ —Ç–∞–º –µ—Å—Ç—å –∏ –¥—Ä—É–≥–∏–µ —Ç–æ–ø—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: –í–∞–ª—é—Ç–∞, –ê—Ä–∫–∞–¥—ã, RPG-—Ö–∞—Ä–∞–∫—Ç–∏—Ä–∏—Å—Ç–∏–∫–∏.

**``2. [work] | (w, —Ä–∞–±–æ—Ç–∞)``**
``` –ë–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ ```
–û–±—ã—á–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞, —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–º–Ω–æ–≥–æ –±–∞–∑–æ–≤–æ–π –≤–∞–ª—é—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞.
–ë—É–¥–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –ª—É—á—à–µ –ø–æ –ø—Ä–æ—Ñ–µ—Å–∏–∏, –æ–¥–Ω–∞–∫–æ —Å–∏–ª—å–Ω–æ –º–Ω–æ–≥–æ —Ç—É—Ç –Ω–µ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å,
–ï—Å–ª–∏ –Ω–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –ª—É—á—à–µ —Å –∫–∞–∂–¥—ã–º —Ä–∞–∑–æ–º.

**``3. [crafts] | (cfs, –∫—Ä–∞—Ñ—Ç–¥—É—à)``**
``` ~cfs <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑ —Å–∫–æ–ª—å–∫–∏ –∫—Ä–∞—Ñ—Ç> ```
–°–ø–æ—Å–æ–± –ø—Ä–µ–¥–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –¥—É—à –≤ –±–æ–ª–µ–µ —Å–∏–ª—å–Ω—ã–µ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ç—ã.
–¢—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Å–∫–æ–ª–∫–æ–º –∏ –¥—É—à. –ù–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –∫—Ä–∏—Å—Ç–∞–ª—å–Ω—ã–µ –¥—É—à–∏.
s - –≤ –∫–æ–Ω—Ü–µ –æ–∑–Ω–∞—á–∞–µ—Ç ¬´–¥—É—à–∏ (soul)¬ª
'''
            )
        #! –ê–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥—ã
        embed_RPG = disnake.Embed(
            title='RPG-–∫–æ–º–∞–Ω–¥—ã',
                        description=
'''
# –û–±—â–∏–π —Å–ø–∏—Å–æ–∫ RPG-–∫–æ–º–∞–Ω–¥

**``1. [stat] | (statistic, —Å—Ç–∞—Ç, —Å—Ç–∞—Ç—É—Å, –ø—Ä–æ—Ñ–∏–ª—å)``**
``` –ë–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ ```
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–µ–∫–æ—Ç–æ—Ä—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
–ß–∞—Å—Ç–æ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è, –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –¥–µ–Ω–µ–≥, –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —É—Ä–æ–≤–Ω—è —Å –æ–ø—ã—Ç–æ–º.

**``2. [russianRollete] | (rr, —Ä—É–ª–µ—Ç–∫–∞, rollete)``**
``` ~rr <–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—É–ª—å 1-6> ```
–†–µ—à–∏–≤ —Å—ã–≥—Ä–∞—Ç—å –≤ —ç—Ç—É –∏–≥—Ä—É, –æ–∂–∏–¥–∞–π—Ç–µ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–π.
–ò–≥—Ä–∞ –ø—Ä–æ—Å—Ç–∞, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –∫—É—Ä–æ–∫ –∏ –ø–æ–ª—É—á–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –¥–µ–Ω–µ–≥.
–û–¥–Ω–∞–∫–æ –ø—Ä–æ–∏–≥—Ä—ã—à—å —Å–¥–µ–ª–∞–µ—Ç –Ω–∞ –æ–¥–∏–Ω —Ç—Ä—É–ø –±–æ–ª—å—à–µ –≤ —ç—Ç–æ–º –º–∏—Ä–µ.
(–ù–µ –ø–æ–ª–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª)
'''
            )
        #! RPG –∫–æ–º–∞–Ω–¥—ã
        embed_admin = disnake.Embed(
            title='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ',
                        description=
'''
# –û–±—â–∏–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤

**``1. [addChannel] | (–æ—Ç–≤–µ—Ç—ã, addch)``**
``` ~addch <—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞> ```
–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤ –ü–æ–Ω—è—à–∫–µ, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –æ–Ω–∞ –±—É–¥–µ—Ç —Å–ª—É—á–∞–π–Ω–æ —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å.

**``2. [RChannel] | (–Ω—É–ª—å, rc)_``**
``` –ë–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ ```
–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è —Å–ª—É—á–∞–π–Ω—ã—Ö —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤ –ü–æ–Ω—è—à–∫–∏.

**``3. [exp] | (‚Äî)``**
``` ~exp <+/- –ß–∏—Å–ª–æ> <–£–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è>```
–ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ ChatPoint –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –∫–∞–∫–∏—Ö-—Ç–æ –æ—Å–æ–±—ã—Ö —Å–ª—É—á–∞—è—Ö, –∫–∞–∫ –Ω–∞–ø—Ä–∏–º–µ—Ä –µ—Å–ª–∏ —Ç—ã –Ω–µ –ü–æ–Ω—å.

**``4. [gifadd] | (–¥–æ–±–≥–∏—Ñ, –Ω–æ–≤–≥–∏—Ñ)``**
``` ~gifadd <–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å—ã–ª–ª–∫–∏ –Ω–∞ –≥–∏—Ñ–∫—É –æ—Ç –¥–∏—Å–∫–æ—Ä–¥–∞> ```
–ü—Ä–æ—Å—Ç–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –≥–∏—Ñ–æ–∫ –≤ –ø–æ–Ω—è—à–∫—É.
–ü–æ–∑–∂–µ –±—É–¥–µ—Ç –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∞–Ω–∞, —Ç–∞–∫ –∫–∞–∫ —Å–ª–æ–∂–Ω–æ –æ—Ç–ª–∞–≤–ª–∏–≤–∞—Ç—å —Ä–∞–±–æ—á–∏–µ –≥–∏—Ñ–∫–∏, –∏–ª–∏ –≥–∏—Ñ–∫–∏ —á—Ç–æ –Ω–µ –≤–ª–∏–≤–∞—é—Ç—Å—è.

'''
            )
        #! –î—Ä—É–≥–æ–µ
        embed_other = disnake.Embed(
            title='–£—Ç–∏–ª–∏—Ç—ã',
                        description=
'''
# –û–±—â–∏–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥-—É—Ç–∏–ª–∏—Ç

**``1. [rand] | (—Ä–∞–Ω–¥–æ–º, —Ä–∞–Ω–¥, —Å–ª—É—á)``**
``` ~rand <–æ—Ç –∫–∞–∫–æ–≥–æ —á–∏—Å–ª–æ> <–¥–æ –∫–∞–∫–æ–≥–æ —á–∏—Å–ª–∞> ```
–°–ª—É—á–∞–π–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —á–∏—Å–ª–∞ –æ—Ç –∏ –¥–æ –æ–ø—Ä–µ–¥–µ–ª–Ω–Ω–æ–≥–æ –ø–æ—Ä–æ–≥–∞.
–ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ –æ–¥–Ω–æ —á–∏—Å–ª–æ, —Ç–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç 0 –∏ –¥–æ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞.

**``2. [coin] | (–º–æ–Ω–µ—Ç–∫–∞, –º–æ–Ω–µ—Ç–æ—á–∫–∞, –∫–æ–∏–Ω)``**
``` ~coin <–æ—Ä—ë–ª/—Ä–µ—à–∫–∞> ```
–ü—Ä–æ—Å—Ç–∞—è –∏–≥—Ä–∞ –≤ –æ—Ä—ë–ª –∏–ª–∏ —Ä–µ—à–∫—É —Å –ü–æ–Ω—è—à–∫–æ–π, –Ω–∏—á–µ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ.
–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥ –ø–æ–¥—Ä—è–¥ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –ø—Ä–æ—Ñ–∏–ª–µ.

**``3. [gif] | (–≥–∏—Ñ, –≥–∏—Ñ–∫–∞)``**
``` –ë–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ ```
–ü–æ–Ω—è—à–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç —Å–ª—É—á–∞–π–Ω—É—é –≥–∏—Ñ–∫—É –≤ —á–∞—Ç.
–ß—Ç–æ –ø–æ–ø–∞–¥—ë—Ç—Å—è, —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –Ω–µ —è—Å–Ω–æ, –∏ –±—É–¥–µ—Ç –ª–∏ —ç—Ç–∞ –≥–∏—Ñ–∫–∞ —É–º–µ—Å—Ç–∞.

'''
            )


        maps = [embed_main, embed_eco, embed_RPG, embed_admin, embed_other]
        view = DropDownViewHelp(map=maps, user=user, time=time.time()+1200)
        await ctx.send(embed=embed_main, view=view)

    @commands.command(name='date', aliases=['–¥–∞—Ç–∞', '–ø—Ä–∞–∑–¥–Ω–∏–∫–∏', '–¥–µ–¥–ª–∞–π–Ω—ã'])
    async def date(self, ctx):
        
        dates = {
            
            '130' : [date(2001, 5, 9),'–î–µ–Ω—å –ø–æ–±–µ–¥—ã'],
            '153' : [(2001, 6, 1), '–ü–µ—Ä–≤—ã–π –¥–µ–Ω—å –ª–µ—Ç–∞'],
            '164' : [(2001, 6, 12), '–î–µ–Ω—å –†–æ—Å—Å–∏–∏']
            
            }

        dateNow = time.strftime('%j', time.gmtime(time.time()))
        dateList = ['–ü–æ–∫–∞ –ø—É—Å—Ç–æ']
        dateSTR = ''

        for index, item in enumerate(dateList):
            dateSTR += f'{index+1} : {item}\n'

        embed = disnake.Embed(
            title='–ë–ª–∏–∂–∞–π—à–∏–µ –∑–Ω–∞–∫–æ–≤—ã–µ –¥–∞—Ç—ã',
            description=dateSTR,
            )
        embed.set_footer(text=f'–î–µ–Ω—å –≥–æ–¥–∞: {dateNow} / 365')

        await ctx.send(embed=embed)

    #! –¢–∞–π–º–µ—Ä
    class Timer:
        def __init__(self, ctx, times, message, bot):
            self.ctx= ctx
            self.time= times
            self.message= message
            self.bot= bot
        async def start(self):
            await asyncio.sleep(self.time)
            embed= disnake.Embed(title='–¢–∞–π–º–µ—Ä –∑–∞–∫–æ–Ω—á–∏–ª —Å—á–µ—Ç')
            await self.message.edit(embed=embed)
            await self.bot.get_channel(self.message.channel.id).send(f'<@{self.ctx.message.author.id}>')

    @commands.command()
    async def test(self, ctx):

        timeValue= 30
        try:
            timeValue= int(ctx.message.content.split(' ')[1])
        except:
            embed= disnake.Embed(description='–£–∫–∞–∑–∞–Ω–æ –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ')
            return await ctx.send(embed=embed)
        if timeValue > 180:
            return await ctx.send('–ü–æ–∫–∞ –Ω–µ –±–æ–ª—å—à–µ 3-—Ö –º–∏–Ω—É—Ç')
        embed= disnake.Embed(title=f'{timeValue} —Å–µ–∫—É–Ω–¥')
        self.user= ctx.message.author.id
        message = await ctx.send(embed=embed)

        await self.Timer(ctx= ctx, times=timeValue, message=message, bot= self.bot).start()

    #! –ü—Ä–æ—Å–ª—É—à–∫–∞
    @commands.Cog.listener('on_button_click')
    async def test2_listener(self, inter: disnake.MessageInteraction):
        if inter.component.custom_id not in ['accpt', 'cannel']:
            return
        if inter.author.id in self.say:
            await inter.response.send_message('–í—ã —É–∂–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏', ephemeral=True)
            return
        if inter.author.id not in self.ment:
            await inter.response.send_message('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –¥–∞–Ω–Ω–æ–º –æ–ø—Ä–æ—Å–µ', ephemeral=True)
            return
        
        if inter.component.custom_id == 'accpt':
            self.index_acpt+= 1
            self.say.append(inter.author.id)
            self.ment.remove(inter.author.id)
            embed= disnake.Embed(title='–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ', description=f'–∑–∞: {self.index_acpt}\n–ø—Ä–æ—Ç–∏–≤: {self.index_cann}')
        elif inter.component.custom_id == 'cannel':
            self.index_cann+= 1
            self.say.append(inter.author.id)
            self.ment.remove(inter.author.id)
            embed= disnake.Embed(title='–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ', description=f'–∑–∞: {self.index_acpt}\n–ø—Ä–æ—Ç–∏–≤: {self.index_cann}')
        if not self.ment:
            embed= disnake.Embed(title='–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ', description=f'–∑–∞: {self.index_acpt}\n–ø—Ä–æ—Ç–∏–≤: {self.index_cann}')
            await inter.response.edit_message(embed=embed, components=None)
        await inter.response.edit_message(embed=embed)
       
    @commands.command()
    async def test2(self, ctx):

        self.ment= ctx.message.raw_mentions
        self.index_acpt= 0
        self.index_cann= 0
        self.say= []

        buttons= [
            disnake.ui.Button(style=disnake.ButtonStyle.green, label='–ü—Ä–∏–Ω—è—Ç—å', custom_id='accpt'),
            disnake.ui.Button(style=disnake.ButtonStyle.danger, label='–û—Ç–∫–ª–æ–Ω–∏—Ç—å', custom_id='cannel')
            ]
        
        embed= disnake.Embed(title='–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ', description=f'–∑–∞: {self.index_acpt}\n–ø—Ä–æ—Ç–∏–≤: {self.index_cann}')
        await ctx.send(embed=embed, components= buttons)

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–≥–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ —è–¥—Ä–æ –ø–æ –∫–æ–º–∞–Ω–¥–µ
def setup(bot:commands.Bot): 
    bot.add_cog(Until(bot))
    print(f'–ó–∞–ø—É—Å–∫ –º–æ–¥—É–ª—è Until.system')